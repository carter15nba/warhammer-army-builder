/*
 *  Copyright (C) 2011 Glenn Rune Strandbråten
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * QueryUI.java
 *
 * Created on 21.apr.2011, 10:34:03
 */

package myrmidia.UI;

import java.awt.Color;
import java.awt.Dimension;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import myrmidia.Enums.Races;

/**
 *
 * @author Glenn Rune Strandbråten
 */
public class QueryUI extends javax.swing.JFrame {

    private int minimizedHeight = 170;
    private static int defaultHeight = 424;
    private static int defaultWidth = 597;
    private SelectTaskUI parent;

    /** Creates new form QueryUI */
    public QueryUI() {
        init();
    }


    public QueryUI(SelectTaskUI parent){
        init();
        this.parent = parent;
        setLocationRelativeTo(parent);
    }

    private void init(){
        initComponents();
        updateUIBounds();
        initRaceDropDown(opponenRaceInput);
        initRaceDropDown(playerRaceInput);
        addUnitsPanel.setVisible(false);
        pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerRaceInput = new javax.swing.JComboBox();
        opponenRaceInput = new javax.swing.JComboBox();
        playerRaceLabel = new javax.swing.JLabel();
        opponentRaceLabel = new javax.swing.JLabel();
        armyPointsLabel = new javax.swing.JLabel();
        requiredFieldsLabel = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        addUnitToggleButton = new javax.swing.JToggleButton();
        addUnitsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        unitsTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        armyPointsField = new myrmidia.UI.Resources.IntTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Myrmidia - Create Query");
        setName("queryUI"); // NOI18N

        playerRaceInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerRaceInputActionPerformed(evt);
            }
        });

        playerRaceLabel.setLabelFor(playerRaceInput);
        playerRaceLabel.setText("Select player race*");

        opponentRaceLabel.setLabelFor(opponenRaceInput);
        opponentRaceLabel.setText("Select opponent race*");

        armyPointsLabel.setLabelFor(armyPointsField);
        armyPointsLabel.setText("Set army points*");

        requiredFieldsLabel.setText("Fields marked with * are required");

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        addUnitToggleButton.setText("Add units to query");
        addUnitToggleButton.setEnabled(false);
        addUnitToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUnitToggleButtonActionPerformed(evt);
            }
        });

        unitsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(unitsTable);

        jButton1.setText("jButton1");

        javax.swing.GroupLayout addUnitsPanelLayout = new javax.swing.GroupLayout(addUnitsPanel);
        addUnitsPanel.setLayout(addUnitsPanelLayout);
        addUnitsPanelLayout.setHorizontalGroup(
            addUnitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addUnitsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
        );
        addUnitsPanelLayout.setVerticalGroup(
            addUnitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addUnitsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addUnitsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addGroup(addUnitsPanelLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addContainerGap())))
        );

        armyPointsField.setText("intTextField1");
        armyPointsField.setMaximumSize(new java.awt.Dimension(30, 20));
        armyPointsField.setMinimumSize(new java.awt.Dimension(30, 20));
        armyPointsField.setPreferredSize(new java.awt.Dimension(30, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addUnitsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playerRaceLabel)
                            .addComponent(opponentRaceLabel)
                            .addComponent(armyPointsLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(opponenRaceInput, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(playerRaceInput, 0, 123, Short.MAX_VALUE)
                            .addComponent(armyPointsField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 221, Short.MAX_VALUE)
                        .addComponent(addUnitToggleButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(requiredFieldsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 292, Short.MAX_VALUE)
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerRaceLabel)
                    .addComponent(playerRaceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addUnitToggleButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(opponentRaceLabel)
                    .addComponent(opponenRaceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(armyPointsLabel)
                    .addComponent(armyPointsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addUnitsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nextButton)
                        .addComponent(cancelButton))
                    .addComponent(requiredFieldsLabel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addUnitToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUnitToggleButtonActionPerformed
        if(addUnitToggleButton.isSelected())
            addUnitsPanel.setVisible(true);
        else 
            addUnitsPanel.setVisible(false);
        updateUIBounds();
    }//GEN-LAST:event_addUnitToggleButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        if(verifyRequiredFields()){
            //TODO: Next step
        }
        else{
            JOptionPane.showMessageDialog(this , "Not all required fields are set.", "Error 01 - Required fields", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        if(parent==null)
            System.exit(0);
        parent.setLocationRelativeTo(this);
        dispose();
        parent.setVisible(true);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void playerRaceInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerRaceInputActionPerformed
        if(playerRaceInput.getSelectedIndex()==0){
            if(addUnitToggleButton.isSelected())
                addUnitToggleButton.doClick();
            addUnitToggleButton.setEnabled(false);
        }
        else
            addUnitToggleButton.setEnabled(true);
    }//GEN-LAST:event_playerRaceInputActionPerformed

    private void initRaceDropDown(JComboBox box){
        box.addItem("N/A");
        for(Races race : Races.values())
            box.addItem(race);
    }

    private boolean verifyRequiredFields(){
        boolean verified = true;
        if(playerRaceInput.getSelectedIndex()==0){
            verified = false;
            playerRaceLabel.setForeground(Color.RED);
        }
        else
            playerRaceLabel.setForeground(Color.BLACK);
        if(opponenRaceInput.getSelectedIndex()==0){
            verified = false;
            opponentRaceLabel.setForeground(Color.RED);
        }
        else
            opponentRaceLabel.setForeground(Color.BLACK);
        if(armyPointsField.getText().isEmpty()){
            verified = false;
            armyPointsLabel.setForeground(Color.RED);
        }
        else
            armyPointsLabel.setForeground(Color.BLACK);
        return verified;
    }

    private void updateUIBounds() {
        if(addUnitToggleButton.isSelected()) {
            setMinimumSize(new Dimension(defaultWidth, defaultHeight));
            if(getWidth()<defaultWidth)
                setPreferredSize(new Dimension(defaultWidth,getHeight()));
            if(getHeight()<defaultHeight)
                setPreferredSize(new Dimension(getWidth(),defaultHeight));
        }
        else{
            setMinimumSize(new Dimension(defaultWidth, minimizedHeight));
            if(getWidth()==defaultWidth&&getHeight()==defaultHeight){
                setPreferredSize(getMinimumSize());
                pack();
            }
            if(getWidth()<defaultWidth)
                setPreferredSize(new Dimension(defaultWidth, getHeight()));
            if(getHeight()<minimizedHeight)
                setPreferredSize(new Dimension(getWidth(),minimizedHeight));

        }
    }



    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QueryUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton addUnitToggleButton;
    private javax.swing.JPanel addUnitsPanel;
    private myrmidia.UI.Resources.IntTextField armyPointsField;
    private javax.swing.JLabel armyPointsLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nextButton;
    private javax.swing.JComboBox opponenRaceInput;
    private javax.swing.JLabel opponentRaceLabel;
    private javax.swing.JComboBox playerRaceInput;
    private javax.swing.JLabel playerRaceLabel;
    private javax.swing.JLabel requiredFieldsLabel;
    private javax.swing.JTable unitsTable;
    // End of variables declaration//GEN-END:variables



}
